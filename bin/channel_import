#!/usr/bin/perl

use strict;
use warnings FATAL => 'all';

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

use Getopt::Long;
my $videosource = 'default';
my $channelsfile = 'channels.conf';
GetOptions(
    's|videosource=s' => \$videosource,
    'c|channels=s' => \$channelsfile,
) or die "Failed to parse command line options.\n";;

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

use HTTP::Lite;
my $http = HTTP::Lite->new;
my $x_chans = {};

$http->request(
    "http://supplement.xmltv.org/tv_grab_uk_rt/lineups/freeview.map",
) or die "Unable to get document: $!";

foreach my $line (split m/\n/, $http->body) {
    my ($cs, $sid, $xid) = split m/\|/, $line;
    next unless defined $xid and length $xid
        and $xid !~ m/RADIO|DATA|ADULT/;
    $x_chans->{T}->{$sid} = { callsign => $cs, xmltvid => $xid };
    $x_chans->{T}->{by_cs}->{$cs} = $sid;
}

$http->request(
    "http://supplement.xmltv.org/tv_grab_uk_rt/lineups/freesat.map",
) or die "Unable to get document: $!";

foreach my $line (split m/\n/, $http->body) {
    my ($cs, $sid, $xid) = split m/\|/, $line;
    next unless defined $xid and length $xid
        and $xid !~ m/RADIO|DATA|ADULT/;
    $x_chans->{S}->{$sid} = { callsign => $cs, xmltvid => $xid };
    $x_chans->{S}->{by_cs}->{$cs} = $sid;
}

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

use File::Slurp;
my @scanned_chans = read_file $channelsfile;
die "Channels file '$channelsfile' is empty!\n"
    if 0 == scalar @scanned_chans;

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

use lib './lib';
use MythConverg::Schema;
my $s = MythConverg::Schema->connect(
    'dbi:mysql:database=mythconverg',
    'mythtv', 'V0yNzk77',
    { mysql_enable_utf8 => 1, quote_char => q{`}, name_sep => q{.} },  
);

my $sources = $s->resultset('Videosource');
my $channels = $s->resultset('Channel');
my $multiplexes = $s->resultset('DtvMultiplex');

my $source = $sources->find({name => $videosource})
    or die "Unknown video source '$videosource' (use -s <name>).\n";
my $sourceid = $source->sourceid;

if ($ENV{RESET_MYTH_CHAN_MPLEX}) {
    $multiplexes->delete;
    $channels->delete;
}

my $max_channum = $channels->get_column('channum')->max;
my @grabber = ();

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

foreach my $line (@scanned_chans) {
    my $scan = parse_vdr_line($line);

    if (exists $x_chans->{$scan->{src}}->{by_cs}->{$scan->{cs}}) {
        $x_chans->{$scan->{src}}->{$scan->{sid}}
            = $x_chans->{$scan->{src}}->{ $x_chans->{$scan->{src}}->{by_cs}->{$scan->{cs}} };
    }

    if (!exists $x_chans->{$scan->{src}}->{$scan->{sid}}) {
        print STDERR "Skipping ($scan->{src}) channel '$scan->{cs}' with no xmltvid\n";
        next;
    }
    my $x_chan = $x_chans->{$scan->{src}}->{$scan->{sid}};
    $scan->{cs} = $x_chan->{callsign}; # override to tv_grab_uk_rt value

    my $mplex = $multiplexes->find_or_create(
        {
            sourceid => $sourceid,
            frequency => ($scan->{freq} < 1_000_000 ? $scan->{freq} * 1_000 : $scan->{freq} ),
            symbolrate => ($scan->{sr} < 1_000_000 ? $scan->{sr} * 1_000 : $scan->{sr}),
        },{
            key => 'zap_key',
        },
    );

    $mplex->update({
        transportid => $scan->{tid},
        networkid => $scan->{nid},
        %{ $scan->{'__parameters__'} },
    });

    # does xmltvid exist? if so, re-use channum, else new channum
    my $has_chan = $channels->search({xmltvid => $x_chan->{xmltvid}})->count;

    my $chan = $channels->find_or_create(
        {
            chanid => (($channels->get_column('chanid')->max || 0) + 1),
            channum => ($has_chan
                ? $channels->search({xmltvid => $x_chan->{xmltvid}})->first->channum
                : ++$max_channum),
            sourceid => $sourceid,
        },{
            key => 'channum_sourceid_key',
        },
    );

    # allow update of meta such as xmltvid
    $chan->update({
        callsign => $scan->{cs},
        mplexid => $mplex,
        serviceid => $scan->{sid},
        xmltvid => $x_chan->{xmltvid},
    });

    # create input file for mythfilldatabase
    push @grabber, "channel $x_chan->{xmltvid}\n";
}

write_file "$videosource.xmltv", @grabber;

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

sub parse_vdr_line {
    my $line = shift;

    # http://linuxtv.org/vdrwiki/index.php/Syntax_of_channels.conf
    # callsign;bouquet:frequency:params():source:symbolrate:vpid:apid:textpid:conditional:serviceid:networkid:transportid:radioid
    # Channel 4;BSkyB:10714:hC56:S28.2E:22000:2327:2328:2329:0:9212:2:2041:0
    # Channel 4;Channel 4 TV:650166:I999B8C23D12M64T2G32Y0:T:27500:560:561=eng,562=eng:0:0:8384:9018:8207:0

    my ($cs,$freq,$params,$src,$sr,undef,undef,undef,undef,$sid,$nid,$tid,undef)
        = ($line =~ m/([^:]+):?/g);

    # general fixups
    $cs =~ s/;.+//;
    $src =~ s/^(.).*/$1/;

    # satellite params
    (my $pol = $params) =~ s{.*([hv]).*}{$1}i;
    $pol = (length $pol > 1 ? undef : lc $pol);
    (my $fec = $params) =~ s{.*C(\d)(\d).*}{$1/$2}; # breaks for 0, so...
    $fec ||= 'auto';

    # terrestrial params
    (my $inv = $params)  =~ s{.*I(\d+).*}{$1};
    $inv = ($inv eq 1 ? $inv : 'auto');
    (my $hp = $params)   =~ s{.*C(\d)(\d).*}{$1/$2}; # breaks for 0, so...
    $hp ||= 'auto';
    (my $lp = $params)   =~ s{.*D(\d)(\d).*}{$1/$2}; # breaks for 0, so...
    $lp ||= 'auto';
    (my $mod = $params)  =~ s{.*M(\d+).*}{qam_$1};
    $mod ||= 'auto';
    (my $bw = $params)   =~ s{.*B(\d).*}{$1};
    (my $tmde = $params) =~ s{.*T(\d).*}{$1};
    (my $grd = $params)  =~ s{.*G(\d+).*}{1/$1};
    (my $hrch = $params) =~ s{.*Y(\d).*}{$1};
    $hrch ||= 'n';

    return {
        cs => $cs,
        freq => $freq,

        '__parameters__' => ($src eq 'S' ? {
            fec => $fec,
            polarity => $pol,
            mod_sys => 'DVB-S',
        } : {
            inversion => $inv,
            hp_code_rate => $hp,
            lp_code_rate => $lp,
            modulation => $mod,
            constellation => $mod, # guess?!
            bandwidth => $bw,
            transmission_mode => $tmde,
            guard_interval => $grd,
            hierarchy => $hrch,
        }),

        src => $src,
        sr => $sr,
        sid => $sid,
        nid => $nid,
        tid => $tid,
    };
}

__END__

mysql> select * from channel where callsign = 'BBC 1 South';
+--------+---------+--------+----------+-------------+-------------+------+----------+--------------+---------+-------------+----------+------------+--------+-------+----------+---------+---------------+---------------+---------+-----------+----------+-----------------+-----------------+---------------------+-------------------+------------+
| chanid | channum | freqid | sourceid | callsign    | name        | icon | finetune | videofilters | xmltvid | recpriority | contrast | brightness | colour | hue   | tvformat | visible | outputfilters | useonairguide | mplexid | serviceid | tmoffset | atsc_major_chan | atsc_minor_chan | last_record         | default_authority | commmethod |
+--------+---------+--------+----------+-------------+-------------+------+----------+--------------+---------+-------------+----------+------------+--------+-------+----------+---------+---------------+---------------+---------+-----------+----------+-----------------+-----------------+---------------------+-------------------+------------+
|      1 | 10353   | NULL   |        2 | BBC 1 South | BBC 1 South |      |     NULL |              |         |           0 |    32768 |      32768 |  32768 | 32768 |          |       1 |               |             1 |     126 |     10353 |        0 |               0 |               0 | 2011-11-06 15:10:35 | fp.bbc.co.uk      |         -1 |
+--------+---------+--------+----------+-------------+-------------+------+----------+--------------+---------+-------------+----------+------------+--------+-------+----------+---------+---------------+---------------+---------+-----------+----------+-----------------+-----------------+---------------------+-------------------+------------+
1 row in set (0.00 sec)

mysql> select * from dtv_multiplex where mplexid = 126;
+---------+----------+-------------+-----------+-----------+-----------+------------+------+----------+------------+-----------+--------------+-------------------+----------------+---------+---------------+-----------+--------------+---------+---------+------------+----------------+---------------------+-------------------+
| mplexid | sourceid | transportid | networkid | frequency | inversion | symbolrate | fec  | polarity | modulation | bandwidth | lp_code_rate | transmission_mode | guard_interval | visible | constellation | hierarchy | hp_code_rate | mod_sys | rolloff | sistandard | serviceversion | updatetimestamp     | default_authority |
+---------+----------+-------------+-----------+-----------+-----------+------------+------+----------+------------+-----------+--------------+-------------------+----------------+---------+---------------+-----------+--------------+---------+---------+------------+----------------+---------------------+-------------------+
|     126 |        2 |        2048 |         2 |  10817500 | a         |   22000000 | 5/6  | v        | qpsk       | a         | auto         | a                 | auto           |       0 | qpsk          | a         | auto         | DVB-S   | 0.35    | dvb        |             33 | 2011-11-06 13:51:16 |                   |
+---------+----------+-------------+-----------+-----------+-----------+------------+------+----------+------------+-----------+--------------+-------------------+----------------+---------+---------------+-----------+--------------+---------+---------+------------+----------------+---------------------+-------------------+
1 row in set (0.00 sec)

# | mplexid | sourceid | transportid | networkid | frequency | inversion | symbolrate | fec  | polarity | modulation | bandwidth | lp_code_rate | transmission_mode | guard_interval | visible | constellation | hierarchy | hp_code_rate | sistandard | serviceversion | updatetimestamp     |
# |       1 |        1 |         500 |      8232 | 858000000 | a         |       NULL | NULL | NULL     | NULL       | 8         | 3/4          | 8                 | 1/4            |       0 | qam_16        | n         | 3/4          | dvb        |              2 | 2008-02-02 20:16:03 | 


